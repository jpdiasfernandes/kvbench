---

- name: Print helpful for debugging
  hosts: localhost
  roles:
    - print_vars
  vars:
    dict_example: {'a' : 1, 'b' : 2}
    db_bench_fixed_options:
      cache_size: 10
      YCSB_uniform_distribution: false
    db_bench_session_options:
        execution:
          cache_size: 99
          YCSB_uniform_distribution: true
          use_existing_db: true
          duration: 60
  tasks:
    - name: debug combine lists
      debug:
        msg: "{{ [1,3,5] | zip([2,4,6]) | flatten }}"
    - name: call ls and register output
      shell: "ls -a"
      register: out

    - name: Display log output lines
      debug:
        msg: "{{ out.stdout_lines }} "

    - name: Display log output lines
      debug:
        msg: "{{ out.stdout_lines + ['erro muito importante', 'outro erro'] }} "

    - name: Display log output merged with list
      debug:
        msg: "{{ out.stdout_lines | zip_longest(['erro muito importante', 'outro erro']) | flatten | join('\\  \n') }} "

    - name: Append to a file
      lineinfile:
        path: /tmp/testfile
        line: "Hello from temp file\nHello1"
        create: yes

    - name: Append to a file
      lineinfile:
        path: /tmp/testfile
        line: "It should've appended\nHello"
        create: yes

    - name: Display log output merged with list in tmp file
      lineinfile:
        path: /tmp/big_command
        line: "{{ out.stdout_lines | zip_longest(['erro muito importante', 'outro erro']) | flatten | join('\\  \n') }} "
        create: yes

    - name: Convert dictionary to list of pairs
      debug:
        msg: "{{ {'a' : {'c' : 2}, 'b': 2} | dict2items }}"

    - name: Stuff
      set_fact:
        session_phase_options: "{{ db_bench_session_options['execution'] | dict2items }}"
      when: db_bench_session_options['execution'] is defined

    - name: Print session_phase_options
      debug:
        msg: "{{ session_phase_options  }}"
      when: session_phase_options is defined

    - name: merge fixed with session options
      set_fact:
        session_phase_options: "{{ db_bench_fixed_options | combine(db_bench_session_options['execution']) | dict2items }}"

    - name: Print combined dict with options
      debug:
        msg: "{{session_phase_options }}"


    - name: Init empty list
      set_fact:
        session_phase_options_lines: []
    - name: Make string with flags
      set_fact:
        session_phase_options_lines: "{{ session_phase_options_lines + [ '--' + item.key + '=' + (item.value | string) ] }}"
      loop: "{{ session_phase_options }}"
      when: session_phase_options is defined

    - name: Print session_phase_options_lines
      debug:
        msg: "{{ session_phase_options_lines }}"

    - name: Print session_phase_string
      debug:
        msg: "{{ session_phase_options_lines | join(' \ \n') }}"

    - name: Append to a file
      lineinfile:
        path: /tmp/flags
        line: "{{ session_phase_options_lines | join('\\ \n') }}"
        create: yes


    - name: Stuff
      set_fact:
        session_phase_options: "Hello World."

    - name: Print session_phase_options
      debug:
        msg: "{{ session_phase_options }}"
      when: session_phase_options is defined

    - name: Print round integer value
      debug:
        msg: "{{ (15.3 / 1)  | round | int }}"

    - name: Pgrep result
      shell: |
        pgrep firefox
      register: out_pgrep
      ignore_errors: yes

    - name: Print out_grep
      debug:
        msg: "{{ out_pgrep }}"

    - name: grep result
      shell: |
        grep hello /etc/cgrules.conf
      register: out_grep_rules
      ignore_errors: yes

    - name: Print out_grep_rules
      debug:
        msg: "{{ out_grep_rules }}"

    - name: Repeat list of strings
      debug:
        msg: "{{ inputvar }}"
      loop: "{{ [ 'set_vars_workload', 'add_fixed_options', 'add_options_workload', 'cool_down_sleep', 'clean_heap', 'spawn_monitoring', 'run_db_bench', 'join_monitoring', 'plot_graph' ] * 3 }}"
      loop_control:
        loop_var: inputvar

    - name: Debug list of strings * 3
      debug:
        msg: "{{ [ 'set_vars_workload', 'add_fixed_options', 'add_options_workload', 'cool_down_sleep', 'clean_heap', 'spawn_monitoring', 'run_db_bench', 'join_monitoring', 'plot_graph' ] * 3  }}"

    - name: Debug version function
      debug:
        msg: "5.1.3 is lower than 5.2.5 {{'5.1.3' is version('5.2.5', '<')}}"

    - name: Debug version function
      debug:
        msg: "5.2.5 is not lower than 5.2.5 {{'5.2.5' is version('5.2.5', '<')}}"


    - name: Create roles lists base
      set_fact:
        loop_list_roles: "{{ [ 'set_vars_workload', 'add_fixed_options', 'add_options_workload', 'cool_down_sleep', 'clean_heap', 'spawn_monitoring', 'run_db_bench', 'join_monitoring', 'plot_graph' ] }}"

    - name: load_backup if defined
      set_fact:
        loop_list_roles: "{{ ['load_backup'] + loop_list_roles }}"
      when: load_backup is defined and load_backup

    - name: Debug loop_list_roles
      debug:
        msg: "{{loop_list_roles}}"

    - name: define load_backup
      set_fact:
        load_backup: True

    - name: load_backup if defined
      set_fact:
        loop_list_roles: "{{ ['load_backup'] + loop_list_roles }}"
      when: load_backup is defined and load_backup

    - name: Debug loop_list_roles
      debug:
        msg: "{{loop_list_roles}}"
